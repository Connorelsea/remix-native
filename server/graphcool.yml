# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Service.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just run `graphcool deploy` to have the first running Graphcool Service.
#
# Check out some examples:
#    https://github.com/graphcool/framework/tree/master/examples
#
# Here are the reference docs of this definition format:
# https://www.graph.cool/docs/reference/service-definition/graphcool.yml-foatho8aip
#
# Happy Coding!


# In the types.graphql you define your data schema
# GraphQL types
types: ./types.graphql

# functions
functions:
  signup:
    handler:
      code:
        src: ./src/email-password/signup.ts
    type: resolver
    schema: ./src/email-password/signup.graphql
  authenticate:
    handler:
      code:
        src: ./src/email-password/authenticate.ts
    type: resolver
    schema: ./src/email-password/authenticate.graphql
  loggednInUser:
    type: resolver
    schema: ./src/email-password/loggedInUser.graphql
    handler:
      code:
        src: ./src/email-password/loggedInUser.ts
  friend_request:
    type: resolver
    schema: ./src/email-password/friend_request.graphql
    handler:
      code:
        src: ./src/email-password/friend_request.ts
  friend_request_accept:
    type: resolver
    schema: ./src/email-password/friend_request_accept.graphql
    handler:
      code:
        src: ./src/email-password/friend_request_accept.ts

# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://www.graph.cool/docs/reference/auth/authorization/overview-iegoo0heez
permissions:
  - operation: "*"


# Your root tokens used for functions to get full access to the API
# Read more here:
# https://www.graph.cool/docs/reference/auth/authentication/authentication-tokens-eip7ahqu5o
# rootTokens:
#   - mytoken

